openapi: 3.0.3
info:
  title: VL Commerce
  version: 1.0.0
  description: A VL Commerce Ã© uma API disponibilizada para uma plataforma de e-commerce
    de produtos.
paths:
  /api/carts/:
    get:
      operationId: api_carts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartProductsList'
          description: ''
  /api/carts/{id}/:
    post:
      operationId: api_carts_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartProducts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartProducts'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartProducts'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartProducts'
          description: ''
  /api/carts/product/{product_id}/:
    delete:
      operationId: api_carts_product_destroy
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/products/:
    get:
      operationId: api_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{product_id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        zip_code:
          type: string
          maxLength: 8
        state:
          type: string
          maxLength: 2
        city:
          type: string
          maxLength: 127
        neighborhood:
          type: string
          maxLength: 100
        number:
          type: string
          nullable: true
          maxLength: 8
        street:
          type: string
          maxLength: 127
      required:
      - city
      - id
      - neighborhood
      - state
      - street
      - zip_code
    CartProducts:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
        cart:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - cart
      - id
      - product
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
      required:
      - id
      - name
    PaginatedCartProductsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartProducts'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        inventory:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available:
          type: boolean
          readOnly: true
        price:
          type: number
          format: double
        description:
          type: string
          nullable: true
          maxLength: 2000
        img:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        img:
          type: string
          maxLength: 127
        email:
          type: string
          format: email
          maxLength: 127
        is_seller:
          type: boolean
        cpf:
          type: string
          maxLength: 11
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        address:
          $ref: '#/components/schemas/Address'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        inventory:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_available:
          type: boolean
          readOnly: true
        price:
          type: number
          format: double
        description:
          type: string
          nullable: true
          maxLength: 2000
        img:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        seller:
          allOf:
          - $ref: '#/components/schemas/Seller'
          readOnly: true
      required:
      - categories
      - id
      - img
      - inventory
      - is_available
      - name
      - price
      - seller
    Seller:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 127
      required:
      - email
      - first_name
      - id
      - last_name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        img:
          type: string
          maxLength: 127
        email:
          type: string
          format: email
          maxLength: 127
        is_seller:
          type: boolean
        cpf:
          type: string
          maxLength: 11
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        address:
          $ref: '#/components/schemas/Address'
      required:
      - address
      - cpf
      - email
      - first_name
      - id
      - last_name
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
